//******************************************************************************
//  @file TextBox.h
//  @author Nicolai Shlapunov
//
//  @details TextBox: User TextBox Class, header
//
//  @copyright Copyright (c) 2023, Devtronic & Nicolai Shlapunov
//             All rights reserved.
//
//  @section SUPPORT
//
//   Devtronic invests time and resources providing this open source code,
//   please support Devtronic and open-source hardware/software by
//   donations and/or purchasing products from Devtronic.
//
//******************************************************************************

#ifndef TextBox_h
#define TextBox_h

// *****************************************************************************
// ***   Includes   ************************************************************
// *****************************************************************************
#include "DevCfg.h"
#include "DisplayDrv.h"
#include "UiEngine.h"

#include "IScreen.h"
#include "InputDrv.h"

// *****************************************************************************
// ***   TextBox Class   *******************************************************
// *****************************************************************************
class TextBox : public VisList
{
  public:
    // *************************************************************************
    // ***   Constructor   *****************************************************
    // *************************************************************************
    TextBox() {};

    // *************************************************************************
    // ***   Public: Setup   ***************************************************
    // *************************************************************************
    Result Setup(int32_t x, int32_t y, int32_t w, int32_t h);

    // *************************************************************************
    // ***   Public: Show   ****************************************************
    // *************************************************************************
    Result Show(uint32_t z = 0u);

    // *************************************************************************
    // ***   Public: Hide   ****************************************************
    // *************************************************************************
    Result Hide();

    // *************************************************************************
    // ***   Public: SetText   *************************************************
    // *************************************************************************
    void SetText(const char* text);

    // *************************************************************************
    // ***   Public: GetSelectedStringText   ***********************************
    // *************************************************************************
    const char* GetSelectedStringText() {return str_text[select_pos - scroll_pos];}

    // *************************************************************************
    // ***   Public: GetSelect   ***********************************************
    // *************************************************************************
    int32_t GetSelect() {return select_pos;}

    // *************************************************************************
    // ***   Public: Select   **************************************************
    // *************************************************************************
    Result Select(int32_t n = 0);

    // *************************************************************************
    // ***   Public: GetScroll   ***********************************************
    // *************************************************************************
    int32_t GetScroll() {return scroll_pos;}

    // *************************************************************************
    // ***   Public: Scroll   **************************************************
    // *************************************************************************
    Result Scroll(int32_t n = 0);

  private:
    // Pointer to text
    const char* p_text = nullptr;

    // Strings to show text
    String str[32];
    char str_text[32][32];
    // Visible lines count
    uint32_t visible_cnt = 0u;

    // Selection box
    Box box;
    // Current TextBox scroll position
    int32_t scroll_pos = 0u;
    // Current TextBox select position
    int32_t select_pos = 0u;
    // Number of lines in text
    int32_t lines_cnt = 0u;

    // Display driver instance
    DisplayDrv& display_drv = DisplayDrv::GetInstance();

    // *************************************************************************
    // ***   Private: Strncpy function   ***************************************
    // *************************************************************************
    uint32_t Strncpy(char *dst, const char *src, uint32_t n);
};

#endif
